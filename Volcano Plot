# ==========================================================
# Volcano Plot (Publication-ready)
# ----------------------------------------------------------
# Features:
#  - Uses pre-computed DESeq2 results (no re-filter/recalc)
#  - Annotates a custom list of genes (regardless of significance)
#  - Highlights significant DEGs (padj < 0.05 & |log2FC| > 1)
#  - Outputs PNG & PDF (publication resolution)
#  - Prints non-significant genes from the annotation list
#  - Adds translucent white background behind labels
#
# Author: [Your Name]
# Repository: [Your Repo]
# ==========================================================

# ===== 1. Load Libraries =====
suppressPackageStartupMessages({
  library(readxl)
  library(dplyr)
  library(ggplot2)
  library(ggrepel)
  library(scales)  # for alpha()
})

# ===== 2. Parameters =====
path     <- "path/to/yourfile.xlsx"     # Input file (DESeq2 annotated result)
alpha    <- 0.05                        # FDR cutoff
lfc_thr  <- 1                           # |log2FC| threshold
pt_size  <- 2.2                         # point size
pt_alpha <- 0.7                         # point transparency

# ===== 3. Load Data =====
sheet_name <- excel_sheets(path)[1]
message("Reading sheet: ", sheet_name)

df <- read_excel(path, sheet = sheet_name) %>%
  mutate(
    padj           = suppressWarnings(as.numeric(padj)),
    log2FoldChange = suppressWarnings(as.numeric(log2FoldChange)),
    SYMBOL         = ifelse(is.na(SYMBOL) | SYMBOL == "", Ensembl_ID, SYMBOL)
  )

# ===== 4. Prepare Volcano Data =====
eps <- .Machine$double.xmin
vol <- df %>%
  filter(!is.na(padj), !is.na(log2FoldChange)) %>%
  mutate(
    padj_safe      = ifelse(padj == 0, eps, padj),
    minusLog10Padj = -log10(padj_safe),
    DEG = case_when(
      padj < alpha & log2FoldChange >  lfc_thr ~ "Up",
      padj < alpha & log2FoldChange < -lfc_thr ~ "Down",
      TRUE ~ "Not Sig"
    )
  )

# ===== 5. Gene List (annotate regardless of significance) =====
gene_labels <- c(
  # ---- Replace below with your own gene list ----
  "GeneA", "GeneB", "GeneC", "GeneD", "GeneE"
)

vol <- vol %>% mutate(to_label = toupper(SYMBOL) %in% toupper(gene_labels))
labels_df <- vol %>% filter(to_label)

# ===== 6. Report Non-Significant Annotated Genes =====
nonsig_genes <- labels_df %>%
  filter(padj >= alpha | abs(log2FoldChange) <= lfc_thr) %>%
  pull(SYMBOL) %>%
  unique()

if (length(nonsig_genes) > 0) {
  cat("\nGenes in label list but NOT significant (padj >= 0.05 or |log2FC| <= 1):\n",
      paste(nonsig_genes, collapse = ", "), "\n\n")
} else {
  cat("\nAll annotated genes are significant (padj < 0.05 & |log2FC| > 1)\n\n")
}

# ===== 7. Caption & Labels =====
n_up   <- sum(vol$DEG == "Up")
n_down <- sum(vol$DEG == "Down")
cap_txt <- sprintf("Cutoffs: padj < %.2g, |log2FC| > %.1f   â€¢   Up: %d   Down: %d",
                   alpha, lfc_thr, n_up, n_down)

# ===== 8. Volcano Plot =====
p <- ggplot(vol, aes(x = log2FoldChange, y = minusLog10Padj)) +
  geom_point(aes(color = DEG), alpha = pt_alpha, size = pt_size) +
  geom_hline(yintercept = -log10(alpha), linetype = "dashed", linewidth = 0.4) +
  geom_vline(xintercept = c(-lfc_thr, lfc_thr), linetype = "dashed", linewidth = 0.4) +
  geom_text_repel(
    data = labels_df,
    aes(label = SYMBOL),
    size = 3.5,
    fontface = "bold",
    color = "black",
    box.padding = 0.35,
    point.padding = 0.25,
    force = 1.5,
    segment.color = "grey60",
    segment.size = 0.25,
    min.segment.length = 0,
    max.overlaps = Inf,
    seed = 7,
    bg.color = alpha("white", 0.55),  # translucent white background
    bg.r = 0.12
  ) +
  scale_color_manual(values = c("Down"="steelblue", "Not Sig"="grey70", "Up"="firebrick")) +
  labs(
    title   = "Volcano Plot: [Group1] vs [Group2]",
    x       = "log2 Fold Change ([Group1] vs [Group2])",
    y       = expression(-log[10]~"(adjusted p-value)"),
    color   = NULL,
    caption = cap_txt
  ) +
  theme_classic(base_size = 12) +
  theme(
    legend.position = "top",
    plot.title      = element_text(hjust = 0.5, face = "bold"),
    plot.caption    = element_text(hjust = 0, size = 9)
  )

# ===== 9. Save Outputs =====
out_dir  <- "path/to/output_directory"
png_path <- file.path(out_dir, "volcano_plot.png")
pdf_path <- file.path(out_dir, "volcano_plot.pdf")

ggsave(png_path, p, width = 5, height = 4, dpi = 500)
ggsave(pdf_path, p, width = 5, height = 4, useDingbats = FALSE)

cat("Saved volcano plots:\n - ", png_path, "\n - ", pdf_path, "\n", sep = "")

print(p)
